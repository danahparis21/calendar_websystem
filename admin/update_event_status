<?php
session_start();
include('../db.php');

// Check if user is logged in and is admin
if (!isset($_SESSION['user_id']) || $_SESSION['role'] !== 'admin') {
    header('HTTP/1.1 403 Forbidden');
    echo json_encode(['error' => 'Access denied']);
    exit();
}

// Validate user ID
if (!isset($_GET['user_id']) || !is_numeric($_GET['user_id'])) {
    header('HTTP/1.1 400 Bad Request');
    echo json_encode(['error' => 'Invalid user ID']);
    exit();
}

$user_id = intval($_GET['user_id']);

try {
    // Prepare and execute the query
    $stmt = $conn->prepare("
        SELECT e.* 
        FROM events e
        WHERE e.user_id = :user_id
        ORDER BY e.start DESC
    ");
    $stmt->bindParam(':user_id', $user_id, PDO::PARAM_INT);
    $stmt->execute();
    
    $events = $stmt->fetchAll(PDO::FETCH_ASSOC);
    
    // Get user details
    $user_stmt = $conn->prepare("SELECT username FROM users WHERE id = :user_id");
    $user_stmt->bindParam(':user_id', $user_id, PDO::PARAM_INT);
    $user_stmt->execute();
    $user = $user_stmt->fetch(PDO::FETCH_ASSOC);
    
    // Log this action
    $admin_id = $_SESSION['user_id'];
    $action = "Viewed events for user #" . $user_id . " (" . $user['username'] . ")";
    $log_stmt = $conn->prepare("INSERT INTO audit_logs (user_id, action) VALUES (:user_id, :action)");
    $log_stmt->bindParam(':user_id', $admin_id, PDO::PARAM_INT);
    $log_stmt->bindParam(':action', $action, PDO::PARAM_STR);
    $log_stmt->execute();
    
    // Return the events data
    header('Content-Type: application/json');
    echo json_encode($events);
    
} catch (PDOException $e) {
    header('HTTP/1.1 500 Internal Server Error');
    echo json_encode(['error' => 'Database error: ' . $e->getMessage()]);
}
?>